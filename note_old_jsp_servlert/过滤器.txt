1.过滤器的使用：
	过滤器是java组件，位于客户端和处理程序之间能够请求和响应进行检查和修改它通常是用来完成一些通用的操作，
	实现：在资源执行之前做一些额外的操作，资源执行后的一些操作，控制是否访问资源
	例如：统一字符编码，字符的压缩，加密，实施安全控制等；
	与过滤器有关的有三个包：Filter FilterChain和FilterConfig;
	Filter:所有过滤器都必须实现这个接口；
		生命周期：web应用加载后立即创建这个web应用的所有过滤器，创建后是驻留在内存中
		init();过滤器初始化，容器会创建实例后调用这个方法
		FilterConfig：代表web.xml中对filter的配置信息
		获取servletContext对象
		获取初始信息

		
		doFilter();完成实际过滤器的操作的方法里面可以放三个参数；
		
		destory();释放资源的方式
	FilterChain:doFilter();用于调用过滤器链中的下一个过滤器，如果是最后一个则将请求提交给处理程序或响应到客户端上；
		filterChain代表一个连对象，一个资源可以用多个过滤器进行拦截，拦截顺序和filtermapping的顺序决定
		链的最后一各节点就是访问的资源；
	FilterConfig:用于过滤器初始化阶段提供过滤器的名字，初始化参数，servlet上下文的信息；
		String getFilterName();返回web.xml文件定义的名称
		ServletContext getServletContext()方法,返回调用者所处的Servlet的上下文
		String getInitParameter(String name):返回配置过滤器名是name的初始值；‘
		Enumeration getgetInitParameterNames()以Enumeration形式返回过滤器所有初始化参数的名称
	出现servlet3.0后在eclipes中就不需要配置web.xml了
	如何进行创建出filter中的参数，写在web.xml中是不能实现的：
	范式：创建filter过滤器，然后在其中的参数列表中选择是否创建参数，然后在改下对应的url-parttern参数
	让他对应你的jsp文件就可以解决这个问题；
	@WebFilter(
		urlPatterns = { "/jsp/index.jsp" }, 
		initParams = { 
				@WebInitParam(name = "count", value = "5000")
		})
		用filterConfig来获取属性的值是多少
		filterConfig.getInitParameter(String name);
	@WebFilter(asyncSupported = true, description = "filterdemo", urlPatterns = { "/*" })

	在myeclipse中就必须在web.xml逐一配置出来
	有：
	<filter>
  		<filter-name>Filter1</filter-name>
  		<filter-class>cn.itcast.filter.Filter1</filter-class>
	</filter>	
	<!-- 配置过滤器去拦截哪个资源 -->
	<filter-mapping>
  		<filter-name>Filter1</filter-name>
  		<url-pattern>/hello.jsp</url-pattern>
		<dispatcher>REQUEST</dispatcher>--用来配置以哪种方式对资源的访问(request/forward/include/error)
	可以配置多个dispatcher如果不配置默认为request请求
	</filter-mapping>	

监听器的使用：
	Servlet监听器是事件的触发8个监听器接口，6个事件类,分别实现了对Servlet上下文，Http会话，和客户段请求的监听；
	接口：SerVletContextListener 事件类为：ServletContextEvent ServletContext的创建和删除；
	ServletContextAttributeLister 事件类为：ServletContextAttributeEvent  对象属性的添加，改变，删除；
	HttpSessionActivationListener 
					事件类为：HttpSessionEvent  session的创建和销毁，
					session属性的添加改变和删除；
	HttpSessionListener
	......
	............